version: '3.8'

services:
  # Event Store
  eventstore:
    image: eventstore/eventstore:23.10.0-bookworm-slim
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - eventstore-volume-data:/var/lib/eventstore
      - eventstore-volume-logs:/var/log/eventstore

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # PostgreSQL (Write Store)
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: aicsynergy
      POSTGRES_USER: aicuser
      POSTGRES_PASSWORD: aicpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # MongoDB (Read Store)
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: aicuser
      MONGO_INITDB_ROOT_PASSWORD: aicpass
    volumes:
      - mongodb_data:/data/db

  # Redis (Cache)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # TimescaleDB (Time Series)
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_DB: timeseries
      POSTGRES_USER: aicuser
      POSTGRES_PASSWORD: aicpass
    ports:
      - "5433:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data

  # Keycloak (Authentication)
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/aicsynergy
      KC_DB_USERNAME: aicuser
      KC_DB_PASSWORD: aicpass
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command: start-dev

  # Nextcloud Document Management
  nextcloud:
    image: nextcloud:28-apache
    ports:
      - "8013:80"
    environment:
      POSTGRES_DB: nextcloud
      POSTGRES_USER: aicuser
      POSTGRES_PASSWORD: aicpass
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
      NEXTCLOUD_ADMIN_USER: aicadmin
      NEXTCLOUD_ADMIN_PASSWORD: aicadmin123
      NEXTCLOUD_TRUSTED_DOMAINS: localhost nextcloud
      OVERWRITEPROTOCOL: http
      OVERWRITEHOST: localhost:8013
    volumes:
      - nextcloud_data:/var/www/html
      - nextcloud_config:/var/www/html/config
      - nextcloud_apps:/var/www/html/custom_apps
    depends_on:
      - postgres
      - redis

  # Kong API Gateway
  kong:
    image: kong:3.4
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./kong:/kong/declarative

  # Microservices
  client-management:
    build:
      context: .
      dockerfile: services/client-management/Dockerfile
    ports:
      - "8001:8000"
    environment:
      POSTGRES_URL: postgresql://aicuser:aicpass@postgres:5432/aicsynergy
      MONGODB_URL: mongodb://aicuser:aicpass@mongodb:27017
      KAFKA_SERVERS: kafka:9092
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - mongodb
      - kafka
      - redis

  project-management:
    build:
      context: .
      dockerfile: services/project-management/Dockerfile
    ports:
      - "8002:8000"
    environment:
      POSTGRES_URL: postgresql://aicuser:aicpass@postgres:5432/aicsynergy
      MONGODB_URL: mongodb://aicuser:aicpass@mongodb:27017
      KAFKA_SERVERS: kafka:9092
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - mongodb
      - kafka
      - redis

  billing:
    build:
      context: .
      dockerfile: services/billing/Dockerfile
    ports:
      - "8003:8000"
    environment:
      POSTGRES_URL: postgresql://aicuser:aicpass@postgres:5432/aicsynergy
      MONGODB_URL: mongodb://aicuser:aicpass@mongodb:27017
      KAFKA_SERVERS: kafka:9092
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - mongodb
      - kafka
      - redis

  ai-model-management:
    build:
      context: .
      dockerfile: services/ai-model-management/Dockerfile
    ports:
      - "8004:8000"
    environment:
      POSTGRES_URL: postgresql://aicuser:aicpass@postgres:5432/aicsynergy
      MONGODB_URL: mongodb://aicuser:aicpass@mongodb:27017
      KAFKA_SERVERS: kafka:9092
      REDIS_URL: redis://redis:6379
      TIMESCALEDB_URL: postgresql://aicuser:aicpass@timescaledb:5432/timeseries
    depends_on:
      - postgres
      - mongodb
      - kafka
      - redis
      - timescaledb

  # Nextcloud Integration Service
  nextcloud-integration:
    build:
      context: .
      dockerfile: services/nextcloud-integration/Dockerfile
    ports:
      - "8016:8000"
    environment:
      POSTGRES_URL: postgresql://aicuser:aicpass@postgres:5432/aicsynergy
      MONGODB_URL: mongodb://aicuser:aicpass@mongodb:27017
      KAFKA_SERVERS: kafka:9092
      REDIS_URL: redis://redis:6379
      NEXTCLOUD_URL: http://nextcloud
      NEXTCLOUD_ADMIN_USER: aicadmin
      NEXTCLOUD_ADMIN_PASSWORD: aicadmin123
    depends_on:
      - nextcloud
      - postgres
      - mongodb
      - kafka
      - redis

volumes:
  eventstore-volume-data:
  eventstore-volume-logs:
  postgres_data:
  mongodb_data:
  redis_data:
  timescale_data:
  nextcloud_data:
  nextcloud_config:
  nextcloud_apps:
