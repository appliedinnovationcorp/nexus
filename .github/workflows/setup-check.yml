# Workflow to check if all required secrets are configured
name: Setup Check

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: ['.github/workflows/**']

jobs:
  check-secrets:
    name: Check Required Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Check Vercel Secrets
        run: |
          echo "üîç Checking required secrets..."
          
          # Check if Vercel secrets exist
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "‚ùå VERCEL_TOKEN is not set"
            echo "   Go to: https://vercel.com/account/tokens"
          else
            echo "‚úÖ VERCEL_TOKEN is configured"
          fi
          
          if [ -z "${{ secrets.VERCEL_ORG_ID }}" ]; then
            echo "‚ùå VERCEL_ORG_ID is not set"
            echo "   Run 'vercel link' and check .vercel/project.json"
          else
            echo "‚úÖ VERCEL_ORG_ID is configured"
          fi
          
          if [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "‚ùå VERCEL_PROJECT_ID is not set"
            echo "   Run 'vercel link' and check .vercel/project.json"
          else
            echo "‚úÖ VERCEL_PROJECT_ID is configured"
          fi
          
          # Check optional secrets
          echo ""
          echo "üéØ Optional secrets status:"
          
          if [ -z "${{ secrets.TURBO_TOKEN }}" ]; then
            echo "‚ö†Ô∏è  TURBO_TOKEN not set (remote caching disabled)"
          else
            echo "‚úÖ TURBO_TOKEN configured (remote caching enabled)"
          fi
          
          if [ -z "${{ secrets.TURBO_TEAM }}" ]; then
            echo "‚ö†Ô∏è  TURBO_TEAM not set (remote caching disabled)"
          else
            echo "‚úÖ TURBO_TEAM configured (remote caching enabled)"
          fi
          
          if [ -z "${{ secrets.SNYK_TOKEN }}" ]; then
            echo "‚ö†Ô∏è  SNYK_TOKEN not set (vulnerability scanning disabled)"
          else
            echo "‚úÖ SNYK_TOKEN configured (vulnerability scanning enabled)"
          fi
          
          # Summary
          echo ""
          echo "üìã Setup Summary:"
          echo "=================="
          
          REQUIRED_COUNT=0
          if [ -n "${{ secrets.VERCEL_TOKEN }}" ]; then ((REQUIRED_COUNT++)); fi
          if [ -n "${{ secrets.VERCEL_ORG_ID }}" ]; then ((REQUIRED_COUNT++)); fi
          if [ -n "${{ secrets.VERCEL_PROJECT_ID }}" ]; then ((REQUIRED_COUNT++)); fi
          
          echo "Required secrets: $REQUIRED_COUNT/3"
          
          if [ $REQUIRED_COUNT -eq 3 ]; then
            echo "üéâ All required secrets are configured!"
            echo "Your CI/CD pipeline is ready to use."
          else
            echo "‚ö†Ô∏è  Missing required secrets. Please configure them to enable full CI/CD functionality."
            echo ""
            echo "üìñ Setup Guide: https://github.com/appliedinnovationcorp/nexus/blob/main/setup-secrets.md"
          fi

      - name: Test Vercel Connection
        if: ${{ secrets.VERCEL_TOKEN && secrets.VERCEL_ORG_ID && secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "üß™ Testing Vercel connection..."
          # This would test the connection but we'll skip actual deployment
          echo "‚úÖ Vercel secrets appear to be valid (full test will run on next deployment)"
